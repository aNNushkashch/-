Задача 1. Бинарный поиск по отсортированному массиву.
#include <iostream>
#include <algorithm>

using namespace std;

int main() {
    setlocale(LC_ALL, "rus");

    int arr[10];
    int key;

    cout << "Введите 10 чисел для заполнения массива: " << endl;

    for (int i = 0; i < 10; i++) {
        cin >> arr[i];
    }

    sort (arr, arr + 10);

    cout << endl << "Введите ключ: ";

    cin >> key;

    bool flag = false;
    int l = 0;
    int r = 9;
    int mid;

    while ((l <= r) && (flag != true)) {
        mid = (l + r) / 2;

        if (arr[mid] == key) flag = true;
        if (arr[mid] > key) r = mid - 1;
        else l = mid + 1;
    }

    if (flag) cout << "Индекс элемента " << key << " в массиве равен: " << mid;
    else cout << "Извините, но такого элемента в массиве нет";

    system("pause");
    return 0;
}

Задача 2. Функция find_terms.
#include <iostream>
#include <ctime>
#include <string>
#include <vector>
#include <climits>

using namespace std;

const int arr_size = 5;

void quicksort(int mas[], int size) {
    int i = 0;
    int j = size - 1;

    int mid = mas[size / 2];

    do {
        while (mas[i] < mid) {
            i++;
        }
        while (mas[j] > mid) {
            j--;
        }

        if (i <= j) {
            swap(mas[i], mas[j]);
            i++;
            j--;
        }
    } while (i <= j);


    if (j > 0) {
        quicksort(mas, j + 1);
    }
    if (i < size) {
        quicksort(&mas[i], size - i);
    }
}

int binarysearch(int mas[], int l, int r,int digit) {
    if (r >= l) {
        int mid = l + ((r - l) / 2);
        if (mas[mid] == digit) {
            return mid;
        }

        if (digit < mas[mid]) {
            return binarysearch(mas, l, mid - 1, digit);
        }
        return binarysearch(mas, mid+1, r, digit);
    }
    else {
        return -1;
    }

}



int main() {

    int arr[arr_size] = { 5,10,3,2,0 };
    int res[10][2];
    int k=5;
    int iter = 0;
    for (int i = 0; i < arr_size; i++) {
        for (int j = i; j < arr_size; j++) {
            if (arr[i] + arr[j] == k) {
                int res_iter[1][2] = { arr[i],arr[j] };
                memcpy(res[iter], res_iter, sizeof(res_iter));
                iter++;
            }
        }
    }

    for (int i = 0; i < iter; i++) {
        for (int j = 0; j < 2; j++) {
            cout << res[i][j] << ' ';
        }
        cout << endl;
    }

    return 0;
}